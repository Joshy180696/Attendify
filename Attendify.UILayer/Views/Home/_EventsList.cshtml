@using Attendify.DomainLayer.Helpers
@using Attendify.DomainLayer.DTO
@model PaginatedList<EventListDto>

<div class="event-container">

    @foreach (var ev in Model)
    {
        <div class="event-card">
            <h3>@ev.Title</h3>
            <p class="date">@ev.DateTime.ToString("MMMM d, yyyy - h:mm tt")</p>
            <p class="location"><strong>Location:</strong> @ev.Location</p>
            <p class="creator"><strong>By:</strong> @ev.CreatedBy</p>
            <p>@ev.Description</p>
            @if (ev.DateTime > DateTime.UtcNow)
            {

                <div class="text-center">    
                    <button class="btn btn-outline-secondary" data-bs-toggle="modal" data-bs-target="#rsvpModal" onclick="openRSVPModal('@ev.Id')">RSVP</button>
                </div>
         
            }
            else
            {
                <span class="text-muted">Event has passed</span>
            }
        </div>
    }
</div>

<div class="paginator" aria-label="Page navigation">
    <div class="pagination-container" style="display:flex; justify-content:center;">
        <ul class="pagination">
            @if (Model.HasPreviousPage)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("LoadEvents", new { pageNumber = Model.CurrentPage - 1, pageSize = Model.PageSize })" onclick="loadPage(event, this)">Previous</a>
                </li>
            }

            @for (int i = 1; i <= Model.TotalPages; i++)
            {
                <li class="page-item @(Model.CurrentPage == i ? "active" : "")">
                    <a class="page-link" href="@Url.Action("LoadEvents", new { pageNumber = i, pageSize = Model.PageSize })" onclick="loadPage(event, this)">@i</a>
                </li>
            }
            @if (Model.HasNextPage)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("LoadEvents", new { pageNumber = Model.CurrentPage + 1, pageSize = Model.PageSize })" onclick="loadPage(event, this)">Next</a>
                </li>
            }
        </ul>
    </div>
</div>